---
# tasks file for mysql
- name: install mysql
  package:
    name: "{{ mysql_packages }}"
    state: present
  register: mysql_install_mysql
  until: mysql_install_mysql is succeeded
  retries: 3

- name: configure mysql
  ini_file:
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    section: mysqld
    option: bind-address
    value: "{{ mysql_bind_address }}"
  notify:
    - restart mysql server

- name: run mysql setup
  command: /etc/init.d/mariadb setup
  args:
    creates: /var/lib/mysql/mysql
  when:
    - ansible_distribution == "Alpine"

- name: run mysql_install_db
  command: mysql_install_db --basedir=/usr --datadir=/var/lib/mysql
  args:
    creates: /var/lib/mysql/mysql
  when:
    - ansible_distribution == "Archlinux"

- name: start and enable mysql
  block:
    - name: start and enable mysql
      service:
        name: "{{ mysql_service }}"
        state: started
        enabled: yes
  rescue:
    - name: collect journalctl
      command: journalctl -xe
      args:
        creates: nothing
      register: journalctl
    - name: show journalctl
      debug:
        msg: "{{ journalctl }}"
    - name: collect systemctl
      command: systemctl status {{ mysql_service }}
      args:
        creates: nothing
      register: systemctl
      tags:
        - skip_ansible_lint
      failed_when: no
    - name: show systemctl
      debug:
        msg: "{{ systemctl }}"
    - name: collect error.log
      command: cat /var/log/mysql/error.log
      args:
        creates: nothing
      register: error_log
    - name: show error.log
      debug:
        msg: "{{ error_log }}"

- name: create databases
  mysql_db:
    name: "{{ item.name }}"
    state: present
    encoding: "{{ item.encoding | default(omit) }}"
    collation: "{{ item.collation | default(omit) }}"
  with_items:
    - "{{ mysql_databases }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - mysql_databases is defined

- name: create users
  mysql_user:
    name: "{{ item.name }}"
    state: present
    password: "{{ item.password | default(omit) }}"
    priv: "{{ item.priv | default(omit) }}"
    host: "{{ item.host | default(omit) }}"
    update_password: on_create
  with_items:
    - "{{ mysql_users }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - mysql_users is defined

- name: flush handlers
  meta: flush_handlers
